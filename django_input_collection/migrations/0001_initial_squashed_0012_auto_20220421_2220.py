# -*- coding: utf-8 -*-
# Generated by Django 5.1.2 on 2024-10-22 17:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("django_input_collection", "0001_initial"),
        ("django_input_collection", "0002_condition_data_getter"),
        ("django_input_collection", "0003_auto_20181114_2036"),
        ("django_input_collection", "0004_remove_condition_parent_instrument"),
        ("django_input_collection", "0005_auto_20181116_1918"),
        ("django_input_collection", "0006_auto_20190122_2117"),
        ("django_input_collection", "0007_auto_20190122_2120"),
        ("django_input_collection", "0008_auto_20190206_1901"),
        ("django_input_collection", "0009_group_to_segment"),
        ("django_input_collection", "0010_auto_20190306_2040"),
        ("django_input_collection", "0011_auto_20190308_2259"),
        ("django_input_collection", "0012_auto_20220421_2220"),
    ]

    dependencies = [
        ("django_input_collection", "__first__"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Case",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("nickname", models.CharField(blank=True, max_length=100, null=True, unique=True)),
                (
                    "match_type",
                    models.CharField(
                        choices=[
                            ("any", "Any input allowed"),
                            ("none", "No input allowed"),
                            ("all-suggested", "All suggested"),
                            ("one-suggested", "At least one suggested"),
                            ("all-custom", "All custom"),
                            ("one-custom", "At least one custom"),
                            ("match", "Input matches this data"),
                            ("mismatch", "Input doesn't match this data"),
                            ("greater_than", "Input is greater than this data"),
                            ("less_than", "Input is less than this data"),
                            ("contains", "Input contains this data"),
                            ("not-contains", "Input does not contain this data"),
                            ("one", "Input is in these values"),
                            ("zero", "Input is not in these values"),
                        ],
                        default=None,
                        max_length=20,
                        null=True,
                    ),
                ),
                ("match_data", models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CollectionGroup",
            fields=[
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("id", models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CollectionInstrumentType",
            fields=[
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("id", models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CollectionRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "max_instrument_inputs_per_user",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("max_instrument_inputs", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConditionGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("nickname", models.CharField(blank=True, max_length=100, null=True, unique=True)),
                (
                    "requirement_type",
                    models.CharField(
                        choices=[
                            ("all-pass", "All cases must pass"),
                            ("one-pass", "At least one case must pass"),
                            ("all-fail", "All cases must fail"),
                        ],
                        default=True,
                        max_length=20,
                    ),
                ),
                ("cases", models.ManyToManyField(blank=True, to="django_input_collection.case")),
                (
                    "child_groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="parent_groups",
                        to="django_input_collection.conditiongroup",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Measure",
            fields=[
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("id", models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ResponsePolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("nickname", models.CharField(max_length=100, null=True)),
                ("is_singleton", models.BooleanField(default=False)),
                ("restrict", models.BooleanField()),
                ("multiple", models.BooleanField()),
                ("required", models.BooleanField()),
            ],
            options={
                "verbose_name_plural": "Response policies",
            },
        ),
        migrations.CreateModel(
            name="SuggestedResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("data", models.CharField(max_length=512)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CollectionInstrument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("order", models.IntegerField(default=0)),
                ("text", models.TextField()),
                ("description", models.TextField(blank=True)),
                ("help", models.TextField(blank=True)),
                (
                    "collection_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_input_collection.collectionrequest",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_input_collection.collectiongroup",
                    ),
                ),
                (
                    "measure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_input_collection.measure",
                    ),
                ),
                (
                    "response_policy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_input_collection.responsepolicy",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="django_input_collection.collectioninstrumenttype",
                    ),
                ),
            ],
            options={
                "ordering": ("order", "pk"),
            },
        ),
        migrations.CreateModel(
            name="CollectedInput",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("data", models.CharField(max_length=512)),
                (
                    "collection_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collectedinput_set",
                        to="django_input_collection.collectionrequest",
                    ),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collectedinput_set",
                        to="django_input_collection.collectioninstrument",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("collector_class", models.CharField(default="unknown", max_length=256)),
                ("collector_comment", models.TextField(blank=True, null=True)),
                ("collector_id", models.CharField(default="unknown", max_length=64)),
                ("collector_version", models.CharField(default="unknown", max_length=128)),
                ("version", models.CharField(default="unknown", max_length=128)),
            ],
            options={
                "swappable": "INPUT_COLLECTEDINPUT_MODEL",
            },
        ),
        migrations.AddField(
            model_name="collectioninstrument",
            name="suggested_responses",
            field=models.ManyToManyField(
                blank=True,
                through="django_input_collection.CollectedInput",
                to="django_input_collection.suggestedresponse",
            ),
        ),
        migrations.AddField(
            model_name="collectioninstrument",
            name="segment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="segment_instruments",
                to="django_input_collection.collectiongroup",
            ),
        ),
        migrations.AlterField(
            model_name="collectioninstrument",
            name="group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="group_instruments",
                to="django_input_collection.collectiongroup",
            ),
        ),
        migrations.AlterModelOptions(
            name="collectioninstrument",
            options={"ordering": ("segment_id", "order", "pk")},
        ),
        migrations.AddField(
            model_name="collectioninstrument",
            name="test_requirement_type",
            field=models.CharField(
                choices=[
                    ("all-pass", "All cases must pass"),
                    ("one-pass", "At least one case must pass"),
                    ("all-fail", "All cases must fail"),
                ],
                default="all-pass",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="BoundSuggestedResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "collection_instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bound_suggested_responses",
                        to="django_input_collection.collectioninstrument",
                    ),
                ),
                (
                    "suggested_response",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_input_collection.suggestedresponse",
                    ),
                ),
            ],
            options={
                "swappable": "INPUT_BOUNDSUGGESTEDRESPONSE_MODEL",
            },
        ),
        migrations.AlterField(
            model_name="collectioninstrument",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.CreateModel(
            name="Condition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "condition_group",
                    models.ForeignKey(
                        limit_choices_to={"parent_groups": None},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_input_collection.conditiongroup",
                    ),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conditions",
                        to="django_input_collection.collectioninstrument",
                    ),
                ),
                ("data_getter", models.CharField(default="", max_length=512)),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
